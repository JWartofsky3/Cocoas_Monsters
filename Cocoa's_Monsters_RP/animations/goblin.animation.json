{
  "format_version": "1.8.0",
  "animations": {
    "animation.minere.goblin.crossbow.charge": {
      "loop": true,
      "bones": {
        "leftarm": {
          "rotation": [
            "math.lerp(-90.0 + 34.38, -90.0, query.is_charged)  -this",
            "math.lerp(22.92, 48.70, query.is_charged) -this",
            0
          ]
        },
        "rightarm": {
          "rotation": ["-90.0 + 34.38 -this", "-45.84 -this", 0]
        }
      }
    },
    "animation.minere.goblin.crossbow.hold": {
      "loop": true,
      "bones": {
        "leftarm": {
          "rotation": [
            "-85.94 + query.target_x_rotation -this",
            "34.38 + math.clamp(query.target_y_rotation, -45, 25) -this",
            0
          ]
        },
        "rightarm": {
          "rotation": [
            "-90.0 + 5.73 + query.target_x_rotation -this",
            "-17.19 + math.clamp(query.target_y_rotation, -25, 45) -this",
            0
          ]
        }
      }
    },
    "animation.minere.goblin.sword.attack": {
      "bones": {
        "leftarm": {
          "rotation": [
            "(math.cos(query.life_time * 20.0 * 10.89) * 28.65) + (math.sin(variable.attack_time * 180.0) * 68.76 - (math.sin((1.0 - (1.0 - variable.attack_time) * (1.0 - variable.attack_time)) * 180.0)) * 22.92)",
            0,
            0
          ]
        },
        "rightarm": {
          "rotation": [
            "-100 + (variable.attack2 * 2.2 - variable.attack * 0.4) + variable.x_bob - this",
            "variable.attack2 * 0.6 - 5.73 - this",
            "variable.z_bob - this"
          ]
        }
      },
      "loop": true
    },
    "animation.minere.goblin.hand.attack": {
      "bones": {
        "leftarm": {
          "rotation": [
            "-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) * 1.2 + math.sin(variable.attack_time * 180)) * 10.0",
            0,
            0
          ]
        },
        "rightarm": {
          "rotation": [
            "-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) * 1.2 + math.sin(variable.attack_time * 180)) * 30.0",
            "-(math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180) ? (-90.0 * math.sin((1 - math.pow((1 - variable.attack_time), 4)) * 180)) + 30.0 : 0.0)",
            0
          ]
        }
      },
      "loop": true
    },
    "animation.minere.goblin.move": {
      "loop": true,
      "bones": {
        "leftarm": {
          "rotation": ["variable.tcos0", 0, 0]
        },
        "leftleg": {
          "rotation": ["-variable.tcos0 * 1.4", 0, 0]
        },
        "rightarm": {
          "rotation": ["-variable.tcos0", 0, 0]
        },
        "rightleg": {
          "rotation": ["variable.tcos0 * 1.4", 0, 0]
        },
        "right_ear": {
          "rotation": [0, 0, "math.cos(query.anim_time * 55) * -5"]
        },
        "left_ear": {
          "rotation": [0, 0, "math.cos(query.anim_time * 55) * 5"]
        }
      }
    },
    "animation.minere.goblin.admire": {
      "loop": true,
      "bones": {
        "leftarm": {
          "rotation": [320, 25, 0]
        },
        "head": {
          "rotation": [30, 0, 0]
        }
      }
    },
    "animation.minere.goblin.celebrate_hunt": {
      "loop": true
    },
    "animation.minere.goblin.celebrate_hunt_special": {
      "loop": true,
      "bones": {
        "head": {
          "position": [
            "Math.sin(query.time_stamp * 10)",
            "Math.sin(query.time_stamp * 40)",
            0
          ]
        },
        "rightarm": {
          "rotation": [0, 0, "70 + Math.cos(query.time_stamp * 40) * 10"]
        },
        "leftarm": {
          "rotation": [0, 0, "-70 - Math.cos(query.time_stamp * 40) * 10"]
        },
        "body": {
          "position": [0, "Math.sin(query.time_stamp * 40) * 0.35", 0]
        }
      }
    }
  }
}
